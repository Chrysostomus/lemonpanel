#! /bin/dash

# Kill any panel processes older than us, 
while [ $(pgrep -cx lemonpanel) -gt 1 -o $(pgrep -cx lemonbar) -gt 1 ] ; do
	pkill -ox -9 lemonpanel
	pkill -ox -9 lemonbar
	killall -9 stalonetray
	killall -9 xtitle
	killall -9 conky
done

trap 'rm /tmp/panel-fifo1' INT TERM QUIT EXIT

#Create a configuration file if it is missing
if ! [ -f "$HOME/.lemonpanelrc" ]; then
	cat > $HOME/.lemonpanelrc <<EOL
panel_height='25'
mainfont="-zevv-peep-medium-*-normal--20-175-*-*-c-*-iso8859-15"
powerlinefont='dejavu sans mono for Powerline:size=15:style=regular'
iconfont="-*-ionicons-medium-r-normal-*-25-*-*-*-p-*-*-1"
gap=15
# From panel_colors file 
CB1='%{B#FF99CC99}'
CB2='%{B#FF4E4E4E}'
CF1='%{F#FF000000}'
CF2='%{F#FF99CC99}'
CF3='%{F#FFD75F5F}'
CF4='%{F#FF4E4E4E}'
update_interval=3
EOL
fi
grep -q update_interval $HOME/.lemonpanelrc || echo 'update_interval="3"' >> $HOME/.lemonpanelrc
#Source the configuration file
. $HOME/.lemonpanelrc

export PANEL_FIFO="/tmp/panel-fifo1"

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

#Set aliases and variables
CBR='%{B-}'
CFR='%{F-}'
LA='%{l}'
RA='%{r}'
AC='%{A:'
AB=':}'
AE='%{A}'
logo="${CFR}${CF1}${CB1}${AC}dmainmenu.sh&disown${AB} ${AE}"
menu="${CF1}${AC}BspwmDesktopMenu${AB}${AE}${AC}BspwmWindowMenu${AB}  ${AE}${CF2}%{B#FF000000}%{B#FF000000}${CF4}" 
RED="%{F#FFA54242}"
DARKGREY="%{F#FF707880}"

is_wifi()
{
	interface_up=$(ip link show | awk '/state UP/ {print substr($2, 1, length($2)-1)}')
	iwconfig $interface_up >/dev/null 2>&1
}
net_indicator()
{
if $(ip link show | grep -q "state UP"); then
	if ! is_wifi;
	then
        echo $CF2" "  
  else
        echo $CF2" "
  fi
else
	echo $DARKGREY" "$CF2
fi
}

battery() {
    BATC=$(cat /sys/class/power_supply/BAT*/capacity)
    BATS=$(cat /sys/class/power_supply/BAT*/status)
	if [ "$BATS" = "Charging" ]; then
		echo " $BATC%"
	else 
		case $BATC in
		100|[7-9]*) echo " $BATC%"
			
			;;
		[4-6]*) echo " $BATC%"
			
			;;
		*) echo "$RED $BATC%$CF2"
			
			;;
		esac
	fi
}

clock() {
    date '+%H:%M'
}

status()
{
if [ -e /sys/class/power_supply/BAT*/ ]; then
	while	:; do
	echo "C%{A:networkmenu.sh:}$(net_indicator)%{A}%{A:dbright:}$(battery)%{A}  $(clock)"
	sleep $update_interval
done	
else
	while	:; do
	echo "C%{A:networkmenu.sh:}$(net_indicator)%{A}  $(clock)"
	sleep $update_interval
done
fi

}

#Collect info for the panel
sleep 1 && bspc subscribe > "$PANEL_FIFO" &
xtitle -t 60 -sf 'T%s\n' > "$PANEL_FIFO" &
#conky -c ~/.config/bspwm/panel/conkyrc-lemonpanel > "$PANEL_FIFO" &
status > "$PANEL_FIFO" &
volume_status.sh &


#Format info in orderly fashion
lemon() {
while read -r line ; do
	case $line in
	S*)
		sys_infos="${line#?}"
	;;
	C*)
	        conky_infos="%{F#FF99CC99}${line#?}"
    ;;
	V*)
        	volume_infos="%{F#FF99CC99} ${line#?} "
    ;;    
	T*)
		formatted=$(echo ${line#?})
		title="${CFR} %{A2:bspc desktop -l next:}${AC}MonocleSwitcher${AB}${formatted}${AE}${AE} "
	;;
	W*)
		wm_infos="%{B#FF99CC99}"
		IFS=':'
		set -- ${line#?}
		while [ $# -gt 0 ] ; do
			item=$1
			name=${item#?}
			case $item in
			[OFU]*)
				# active desktop
				wm_infos="${wm_infos}${CF1}${AC}bspc desktop -f ${name}${AB} ${AE}${CFR}"
			;;
			o*)
				# inactive but occupied desktop
				wm_infos="${wm_infos}${CF1}${AC}bspc desktop -f ${name}${AB} ${AE}${CFR}"
			;;
			f*)
				# inactive desktop
				wm_infos="${wm_infos}${CF1}${AC}bspc desktop -f ${name}${AB} ${AE}${CFR}"
			;;
			u*)
				# urgent desktop
				wm_infos="${wm_infos}${CF3}${AC}bspc desktop -f ${name}${AB} ●${AE}${CFR}"
			;;
			esac
			shift
		done
	;;
	esac
	printf "%s\n" "$logo$wm_infos $menu %{c}$title %{r}$sys_infos%{F#FF000000}$volume_infos${conky_infos} %{A:dlogoutmenu:}%{A}"
done
}

#Actually run the panel
cat "$PANEL_FIFO" | lemon | lemonbar -p -g x$panel_height -f "$mainfont" -f "$powerlinefont" -f "$iconfont" -u 2 -F "$BG" -B "$BG" -a 40 | while read line; do eval "$line"; done &

wait
